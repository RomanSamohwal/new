{"version":3,"sources":["Monday/Task1/Message/Message.module.css","Monday/Task3/Input.module.css","Navbar/Navbar.module.css","Tuesday/Cloud.module.css","Wednesday.module.css","Monday/Task2/Quality.module.css","Monday/Task3/Button.module.css","App.module.css","Monday/Monday.module.css","Monday/Task1/Name/Name.module.css","Monday/Task3/Counter.module.css","Monday/Task4/InputName.module.css","assests/loading.gif","Monday/Task1/Message/images.jfif","Monday/Task1/Name/Name.jsx","Monday/Task2/Quality.jsx","Monday/Task1/Message/Message.jsx","Monday/Task3/Input.jsx","Monday/Task3/Span.jsx","Monday/Task3/Butt.jsx","Monday/Task3/Button.jsx","Monday/Task4/InputNames.jsx","Monday/Monday.js","Navbar/Navbar.jsx","Tuesday/ToDoList/TodoListHeader.js","Tuesday/Cloud.js","Tuesday/ToDoList/TodoListTask.js","Tuesday/ToDoList/TodoListTasks.js","Tuesday/ToDoList/TodoListFooter.js","storage.js","Tuesday/ToDoList/ToDoList.js","Tuesday/Tuesday.js","redux/settingReducer.ts","api/api.tsx","redux/reducerTwist.ts","Wednesday.js","assests/Preloader.js","App.js","serviceWorker.js","redux/store.ts","index.js"],"names":["module","exports","Name","className","s","name","Quality","newArray","map","num","i","quality","key","toString","qualityAll","Message","wrapper","cloud","before","after","time","Input","render","error","props","input","input_box","type","placeholder","onChange","changedError","onKeyPress","value","state","React","Component","Span","count","Butt","box_button","button","onClick","onAddClick","Counter","counter_box","InputNames","newNames","names","Monday","nameArray","reference","createRef","newName","setState","newCount","changed","alert","newArr","e","currentTarget","Navbar","navbar","to","activeClassName","active","TodoListHeader","title","onAddTaskClick","newText","addTask","onTitleChanged","classNameForInput","Cloud","task","create","updated","finished","TodoListTask","editMode","flag","onIsDoneChanged","changeStatus","id","checked","changeTitle","activateEditMode","deactivateEditMode","deleteTask","onChangeFlag","offChangeFlag","handleChange","event","changePriority","target","containerCssClass","isDone","onMouseOut","onMouseOver","onBlur","autoFocus","priority","TodoListTasks","tasksElements","tasks","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","onHideFiltersClick","classForAll","filterValue","classForCompleted","classForActive","save","localStorage","setItem","JSON","stringify","restore","getItem","parse","ToDoList","saveState","restoreState","stateAsString","forEach","t","nextTaskId","setDate","day","Date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","newTask","newTasks","newFilterValue","changeTask","taskId","obj","filter","this","Tuesday","initialState","style","instance","axios","baseURL","api","sendPostRequest","success","post","tryCatch","f","a","response","console","log","data","errorText","loading","message","changeLoadingSuccess","Wednesday","disable","onChangeStyle","color","styleColor","green","black","brown","setStyle","setValueSuccess","sendRequest","responseMessage","box","disabled","connect","settings","twist","dispatch","then","r","Preloader","src","preloader","width","height","App","Route","path","exact","setTimeout","changeLoading","Boolean","window","location","hostname","match","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5f6970fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cloud\":\"Message_cloud__1rpek\",\"wrapper\":\"Message_wrapper__3fWY9\",\"before\":\"Message_before__y5EgF\",\"after\":\"Message_after__3fdQr\",\"name\":\"Message_name__20UUf\",\"text\":\"Message_text__fIuP2\",\"time\":\"Message_time__3FRga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_box\":\"Input_input_box__3YVan\",\"input\":\"Input_input__2EkbD\",\"error\":\"Input_error__JJN9Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__3JQ5B\",\"active\":\"Navbar_active__2pVpQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cloud\":\"Cloud_cloud__1Vs7I\",\"wrapper\":\"Cloud_wrapper__3ZgJM\",\"after\":\"Cloud_after__3m13e\",\"time\":\"Cloud_time__nm088\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wednesday\":\"Wednesday_Wednesday__3gsdX\",\"box\":\"Wednesday_box__U5i40\",\"green\":\"Wednesday_green__25-FT\",\"black\":\"Wednesday_black__1e44t\",\"brown\":\"Wednesday_brown__2XQeB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"qualityAll\":\"Quality_qualityAll__2J6br\",\"quality\":\"Quality_quality__3ZfXr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box_button\":\"Button_box_button__9cljv\",\"button\":\"Button_button__2i_H5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__x3VOy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Monday\":\"Monday_Monday__1g5K1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Name_name__1tLA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter_box\":\"Counter_counter_box__2rBOF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"names\":\"InputName_names__317eT\"};","module.exports = __webpack_public_path__ + \"static/media/loading.7c5f2d73.gif\";","module.exports = __webpack_public_path__ + \"static/media/images.4f5d38c9.jfif\";","import React from 'react';\nimport s from \"./Name.module.css\";\n\nconst Name = () => {\n    return <h1 className={s.name}>ROMAN SAMOHWAL</h1>\n}\nexport default Name;","import React from 'react';\nimport s from \"./Quality.module.css\";\n\nfunction Quality() {\n    let array = [\"рационалист\", \"пофигист\", \"максималист\", \"перфекционист\"];\n    let newArray = array.map((num, i) => {\n        if (i === 1) {\n            return <div className={s.quality} key={num.toString()}>{num}</div>;\n        } else {\n            return <div className={s.qualityAll} key={num.toString()}>{num}</div>\n        }\n    });\n    return (\n        <div>\n            {newArray}\n        </div>\n    );\n}\n\nexport default Quality;","import React from 'react';\nimport s from \"./Message.module.css\";\nimport image from './images.jfif'\n\nconst Message = () => {\n    return <div className={s.wrapper}>\n        <div className={s.cloud}>\n            <div className={s.cloud}>\n                <div className={s.name}>Самохвал Роман Сергеевич</div>\n                <div className={s.before}></div>\n                <div className={s.after}></div>\n                ####################################################################################\n                <div className={s.time}>\n                    13.04.2020\n                </div>\n            </div>\n\n        </div>\n    </div>\n}\n\nexport default Message;","import React from 'react';\nimport s from \"./Input.module.css\";\n\nclass Input extends React.Component {\n\n    render = () => {\n        debugger;\n        let error = this.props.error ? `${s.input + \" \" + s.error}`: `${s.input}`;\n\n        return <div className={s.input_box}>\n            <input className = {error}  type={\"text\"}\n                   placeholder={\"enter your name\"} onChange={this.props.changedError}\n                   onKeyPress={this.props.onKeyPress} value={this.props.state.name}\n            />\n\n        </div>\n    }\n}\n\nexport default Input;","import React from 'react';\nimport s from \"./Input.module.css\";\n\nclass Span extends React.Component {\n\n\n\n    render = () => {\n        return <div><span>{this.props.state.count}</span></div>\n    }\n}\n\nexport default Span;","import React from 'react';\nimport s from \"./Button.module.css\";\nimport Span from \"./Span\";\n\n\nclass Butt extends React.Component {\n\n    render = () => {\n        return <div className={s.box_button}>\n            <Span state = {this.props.state}/>\n            <button className={s.button} onClick={this.props.onAddClick}>Press the button</button>\n        </div>\n    }\n}\n\nexport default Butt;","import React from 'react';\nimport s from \"./Counter.module.css\";\nimport Input from \"./Input\";\nimport Butt from \"./Butt\";\n\n\nclass Counter extends React.Component {\n\n    render = () => {\n        return <div className={s.counter_box}>\n            <Input error ={this.props.error}\n                   changedError = {this.props.changedError} onKeyPress = {this.props.onKeyPress} state = {this.props.state} />\n            <Butt onAddClick = {this.props.onAddClick} state = {this.props.state} />\n        </div>\n    }\n}\n\nexport default Counter;","import React from 'react';\nimport s from './InputName.module.css'\n\n\nclass InputNames extends React.Component {\n    render = () => {\n       let newNames = this.props.name.map((name)=><div className={s.names}>{name}</div>);\n        return <div>{newNames}</div>\n    }\n}\n\nexport default InputNames;","import React from 'react';\n\nimport s from \"./Monday.module.css\"\nimport Name from \"./Task1/Name/Name\";\nimport Quality from \"./Task2/Quality\";\nimport Message from \"./Task1/Message/Message\";\nimport Counter from \"./Task3/Button\";\nimport InputNames from \"./Task4/InputNames\";\n\nclass Monday extends React.Component {\n    state = {\n        count: 0,\n        nameArray: [],\n        error: false,\n        name: \"\"\n    };\n    reference = React.createRef();\n\n\n    onAddClick = () => {\n        let newName = this.state.name;\n        this.setState({name: \"\"});\n\n        if (newName === \"\") {//проверяем если пустакя строка тогда рамка input подсвечивается красным\n            this.setState({error: true})\n        } else {\n            let newCount = this.state.count + 1;\n            this.changed(newCount, newName);\n            alert(\"Hello \" + newName);\n        }\n\n    };\n\n\n    changed = (newCount, newName) => {\n        let newArr = [...this.state.nameArray, newName];\n        this.setState({\n            count: newCount,\n            nameArray: newArr,\n        });\n    };\n\n//что бы пропала красная граница нужно добавить обработчик события onChange в input и в нём сетать ошибку в false\n    changedError = (e) => {\n        debugger;\n        this.setState(\n            {error: false,\n                   name: e.currentTarget.value})//\n    };\n\n//функцию пробрасываем в input в атрибут onKeyPress. Срабатывает при нажатии Enter\n    onKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            this.onAddClick();\n        }\n    };\n\n    render = () => {\n        return (\n            <div className={s.Monday}>\n                <Name/>\n                <Message/>\n                <Quality/>\n                <Counter state={this.state} onAddClick={this.onAddClick} error={this.state.error}\n                         changedError={this.changedError} onKeyPress={this.onKeyPress}/>\n                <InputNames name={this.state.nameArray}/>\n            </div>\n        );\n    }\n}\n\nexport default Monday;\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./Navbar.module.css\"\n\n\nclass Navbar extends React.Component {\n\n    render = () =>\n     <div className={s.navbar}>\n         <NavLink to=\"/monday\" activeClassName={s.active}>Monday</NavLink>\n         <NavLink to=\"/tuesday\" activeClassName={s.active}>Tuesday</NavLink>\n         <NavLink to=\"/wednesday\" activeClassName={s.active}>Wednesday</NavLink>\n         <NavLink to=\"/test\" activeClassName={s.active}>test</NavLink>\n    </div>\n\n}\n\nexport default Navbar;","import React from 'react';\nimport './ToDoList';\n\n\nclass TodoListHeader extends React.Component {\n    state = {\n        error: false,\n        title: \"\"\n    };\n\n    onAddTaskClick = () => {\n        let newText = this.state.title;\n        this.setState({title: \"\"});\n\n        if (newText === \"\") {\n            this.setState({error: true});\n        } else {\n            this.setState({error: false});\n            // передаём новый текст наружу\n            this.props.addTask(newText);\n        }\n    }\n\n    onTitleChanged = (e) => {\n        debugger\n        this.setState({\n            error: false,\n            title: e.currentTarget.value\n        });\n    }\n\n    onKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            this.onAddTaskClick()\n        }\n    }\n\n\n    render = () => {\n        let classNameForInput = this.state.error ? \"error\" : \"\";\n\n        return (\n            <div className=\"todoList-header\">\n                <h3 className=\"todoList-header__title\">What to Learn</h3>\n                <div className=\"todoList-newTaskForm\">\n                    <input className={classNameForInput} type=\"text\" placeholder=\"New task name\"\n                           onChange={this.onTitleChanged}\n                           onKeyPress={this.onKeyPress}\n                           value={this.state.title}\n                    />\n                    <button onClick={this.onAddTaskClick}>Add</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TodoListHeader;\n\n","import React from 'react';\nimport s from \"./Cloud.module.css\";\n\nconst Cloud = (props) => {\n    return <div className={s.wrapper}>\n        <div className={s.cloud}>\n            <div className={s.cloud}>\n                <div className={s.after}></div>\n                <div className={s.time}>\n                    <div> create: {props.task.create}</div>\n                    <div> update: {props.task.updated}</div>\n                    <div> finished: {props.task.finished}</div>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n}\n\nexport default Cloud;","import React from 'react';\nimport './ToDoList';\nimport Cloud from \"../Cloud\";\n\nclass TodoListTask extends React.Component {\n\n    state = {\n        editMode: false,\n        flag: false\n    };\n\n\n    onIsDoneChanged = (e) => {\n        this.props.changeStatus(this.props.task.id, e.currentTarget.checked);\n    };\n\n    onTitleChanged = (e) => {\n        this.props.changeTitle(this.props.task.id, e.currentTarget.value);\n    };\n\n\n    activateEditMode = () => {\n        this.setState({editMode: true});\n    };\n\n    deactivateEditMode = () => {\n        this.setState({editMode: false});\n    };\n\n    deleteTask = () => {\n        let id = this.props.task.id;\n        this.props.deleteTask(id)\n    };\n    onChangeFlag=()=>{\n        this.setState({flag : true})\n\n    };\n\n    offChangeFlag=()=>{\n        this.setState({flag : false})\n\n    };\n\n    handleChange=(event)=> {\n        debugger\n        /*this.setState({value: event.target.value});*/\n        this.props.changePriority(this.props.task.id, event.target.value)\n    }\n\n    render = () => {\n\n        let containerCssClass = this.props.task.isDone ? \"todoList-task done\" : \"todoList-task\";\n\n        return (\n             <div onMouseOut={this.offChangeFlag}>\n                <div className={containerCssClass} onMouseOver={this.onChangeFlag}>\n                    {/* кнопка для удаления*/}\n                    <button onClick={this.deleteTask}>delete</button>\n\n                    <input type=\"checkbox\" checked={this.props.task.isDone}\n                           onChange={this.onIsDoneChanged}/>\n                    {this.state.editMode\n                        ? <input onBlur={this.deactivateEditMode} onChange={this.onTitleChanged} autoFocus={true}\n                                 value={this.props.task.title}/>\n                        : <span onClick={this.activateEditMode}>{this.props.task.id} - {this.props.task.title}</span>\n                    }, priority:\n                    <form >\n                        <label>\n                            <select value ={this.props.priority}  onChange={this.handleChange}>\n                                <option value=\"low\">low</option>\n                                <option value=\"medium\">medium</option>\n                                <option value=\"high\">high</option>\n                            </select>\n                        </label>\n                    </form>\n                </div>{this.state.flag? <div  className=\"cloudList\"><Cloud task ={this.props.task}/></div> : \"\"}\n             </div>\n        );\n    }\n}\n\nexport default TodoListTask;\n","import React from 'react';\nimport './ToDoList';\nimport TodoListTask from \"./TodoListTask\";\n\nclass TodoListTasks extends React.Component {\n\n    render = () => {\n\n        let tasksElements = this.props.tasks.map( task => <TodoListTask task={task}\n                                                                        changeStatus={this.props.changeStatus}\n                                                                        changeTitle={this.props.changeTitle}\n                                                                        deleteTask = {this.props.deleteTask}\n                                                                        changePriority = {this.props.changePriority}\n                                                                        priority = {task.priority}   />);\n\n        return (\n            <div className=\"todoList-tasks\">\n                {tasksElements}\n            </div>\n        );\n    }\n}\n\nexport default TodoListTasks;\n\n\n","import React from 'react';\nimport './ToDoList';\n\nclass TodoListFooter extends React.Component {\n\n    state = {\n        isHidden: true\n    }\n\n    onAllFilterClick = () => { this.props.changeFilter(\"All\"); }\n    onCompletedFilterClick = () => { this.props.changeFilter(\"Completed\"); }\n    onActiveFilterClick = () => { this.props.changeFilter(\"Active\"); }\n    onShowFiltersClick = () => { this.setState({isHidden: true}) }\n    onHideFiltersClick = () => { this.setState({isHidden: false}) }\n\n    render = (props) => {\n\n        let classForAll = this.props.filterValue === \"All\" ? \"filter-active\" : \"\";\n        let classForCompleted = this.props.filterValue === \"Completed\" ? \"filter-active\" : \"\";\n        let classForActive = this.props.filterValue === \"Active\" ? \"filter-active\" : \"\";\n\n        return (\n            <div className=\"todoList-footer\">\n                { !this.state.isHidden && <div>\n                    <button onClick={ this.onAllFilterClick } className={classForAll}>All</button>\n                    <button onClick={ this.onCompletedFilterClick } className={classForCompleted}>Completed</button>\n                    <button onClick={ this.onActiveFilterClick } className={classForActive}>Active</button>\n                </div>\n                }\n                { !this.state.isHidden && <span onClick={ this.onShowFiltersClick }>hide</span> }\n                { this.state.isHidden && <span onClick={ this.onHideFiltersClick }>show</span> }\n            </div>\n        );\n    }\n}\n\nexport default TodoListFooter;\n","let state = {\r\n    tasks: [],\r\n    filterValue: \"All\"\r\n};\r\n\r\nexport const save = (key, state) => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n};\r\n\r\nexport const restore = (key) => {\r\n    if (localStorage.getItem(key) === null) {\r\n        return state\r\n    } else {\r\n        return JSON.parse( localStorage.getItem(key))\r\n    }\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\nimport './ToDoList.css';\nimport TodoListHeader from \"./TodoListHeader\";\nimport TodoListTasks from \"./TodoListTasks\";\nimport TodoListFooter from \"./TodoListFooter\";\nimport {restore, save} from \"../../storage\";\n\nclass ToDoList extends React.Component {\n\n    componentDidMount() {\n        this.restoreState();\n    }\n\n    saveState = () => {\n        //вызываем метод save из storage.js\n        save(\"our-state\", this.state);\n    };\n    restoreState = () => {\n        let stateAsString = restore(\"our-state\");\n        this.setState(stateAsString, () => {\n            this.state.tasks.forEach(t => {\n                if (t.id >= this.nextTaskId) {\n                    this.nextTaskId = t.id + 1;\n                }\n            })\n        });\n    };\n\n    nextTaskId = 0;\n\n    state = {\n        tasks: [],\n        filterValue: \"All\",\n        flag: false\n    };\n    setDate = () => {\n        let day = new Date().getDate();\n        let month = new Date().getMonth();\n        let year = new Date().getFullYear();\n        let hour = new Date().getHours();\n        let minute = new Date().getMinutes();\n        let second = new Date().getSeconds();\n        let fullTime = `${day}:${month}:${year}  ${hour}:${minute}:${second}`;\n        return fullTime;\n    };\n\n    addTask = (newText) => {\n        debugger\n        let newTask = {\n            id: this.nextTaskId,\n            title: newText,\n            isDone: false,\n            priority: \"low\",\n            create: this.setDate(),\n            updated: \"\",\n            finished: \"\"\n        };\n        // инкрементим (увеличим) id следующей таски, чтобы при следюущем добавлении, он был на 1 больше\n        this.nextTaskId++;\n        let newTasks = [...this.state.tasks, newTask];\n        this.setState({\n            tasks: newTasks\n        }, () => {\n            this.saveState();\n        });\n\n    }\n\n    changeFilter = (newFilterValue) => {\n        this.setState({\n            filterValue: newFilterValue\n        }, () => {\n            this.saveState();\n        });\n    }\n\n    changeTask = (taskId, obj) => {\n        let newTasks = this.state.tasks.map(t => {\n            if (t.id != taskId) {\n                return t;\n            } else {\n                return {...t, ...obj};\n            }\n        });\n\n        this.setState({\n            tasks: newTasks\n        }, () => {\n            this.saveState();\n        });\n    }\n\n\n    changeStatus = (taskId, isDone) => {\n        this.changeTask(taskId, {isDone: isDone,\n                                      finished: this.setDate()});\n    }\n    changeTitle = (taskId, title) => {\n        this.changeTask(taskId, {title: title,\n                                      updated: this.setDate()});\n    }\n\n    changePriority = (taskId, priority) => {\n        debugger\n        this.changeTask(taskId, {priority: priority});\n    };\n\n    deleteTask = (id) => {\n        let newTask = this.state.tasks.filter(i => {\n            if (i.id === id) {\n                return false\n            } else return true\n        });\n        this.setState({tasks: newTask}, () => {\n            this.saveState();\n        })\n    };\n\n    render = () => {\n       \n        return (\n            <div className=\"App\">\n                <div className=\"todoList\">\n                    <TodoListHeader addTask={this.addTask}/>\n                    <TodoListTasks\n                        changeStatus={this.changeStatus}\n                        changeTitle={this.changeTitle}\n                        deleteTask={this.deleteTask}\n                        changePriority={this.changePriority}\n                        tasks={this.state.tasks.filter(t => {\n                            if (this.state.filterValue === \"All\") {\n                                return true;\n                            }\n                            if (this.state.filterValue === \"Active\") {\n                                return t.isDone === false;\n                            }\n                            if (this.state.filterValue === \"Completed\") {\n                                return t.isDone === true;\n                            }\n                        })\n                        }/></div>\n                <TodoListFooter changeFilter={this.changeFilter} filterValue={this.state.filterValue}/>\n            </div>\n\n        );\n    }\n}\n\nexport default ToDoList;\n\n\n\n","import React from 'react';\nimport ToDoList from \"./ToDoList/ToDoList\";\n\n\nclass Tuesday extends React.Component {\n\n\n    render = () => {\n        return (\n            <div>\n                <ToDoList />\n            </div>\n        );\n    }\n}\n\nexport default Tuesday;\n","const SET_STYLE = 'SET_STYLE';\r\n\r\ntype InitialStateType = {\r\n    style: any\r\n}\r\n\r\nconst initialState = {\r\n    style: \"\"\r\n};\r\n\r\nexport const settingReducer = (state=initialState, action:SetStyleACType):InitialStateType=>{\r\n    debugger\r\n    switch (action.type) {\r\n        case 'SET_STYLE': return {...state, style: action.style}\r\n    }\r\n    return state;\r\n};\r\n\r\ntype SetStyleACType = {\r\n    type: typeof SET_STYLE\r\n    style : any\r\n}\r\n\r\nexport const setStyleAC = (style: any):SetStyleACType =>({type: SET_STYLE, style});\r\n\r\n","import axios from \"axios\";\r\n\r\ntype sendPostRequest = {\r\n    errorText: string\r\n}\r\n\r\nconst instance =axios.create({\r\n    baseURL: 'https://neko-cafe-back.herokuapp.com/auth/test'\r\n});\r\n\r\n\r\nexport const api = {\r\n    sendPostRequest(success: boolean) {\r\n        return instance.post<sendPostRequest>('', {success: success})\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const tryCatch = async (f: any)=>{\r\n    try {\r\n        const response = await f();\r\n        console.log('answer: ', response.data);\r\n        return response.data.errorText;\r\n    } catch (e) {\r\n        console.log('error: ', {...e});\r\n        return 'error';\r\n    }\r\n};","import {api, tryCatch} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SET_LOADING = 'SET_LOADING';\r\nconst SET_MESSAGE = 'SET_MESSAGE';\r\n\r\ntype InitialStateType = {\r\n    loading: boolean\r\n    message: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    loading: true,\r\n    message: \"\",\r\n\r\n};\r\n\r\nexport const reducerTwist = (state= initialState, action: ActionTypes):InitialStateType => {\r\n    debugger\r\n    switch (action.type) {\r\n        case 'SET_LOADING' :\r\n            return {...state, loading: action.loading}\r\n        case 'SET_MESSAGE': return {...state, message: action.message}\r\n    }\r\n    return state;};\r\n\r\ntype ActionTypes = ChangeLoadingSuccessType|SetMessageSuccessType;\r\n\r\ntype ChangeLoadingSuccessType = {\r\n    type: typeof SET_LOADING\r\n    loading : boolean\r\n}\r\n\r\nexport const changeLoadingSuccess= (loading:boolean):ChangeLoadingSuccessType => ({\r\n     type: SET_LOADING,\r\n     loading\r\n});\r\n\r\ntype SetMessageSuccessType = {\r\n    type: typeof SET_MESSAGE\r\n    message : string\r\n}\r\n\r\n//AC creator\r\nconst setMessageSuccess = (message: string):SetMessageSuccessType => ({\r\n    type: SET_MESSAGE,\r\n    message\r\n});\r\n\r\n//thunk\r\nexport const responseMessage = (success: boolean) =>{\r\n\r\n    return (dispatch: Dispatch<ActionTypes>)=>{\r\n        dispatch(changeLoadingSuccess(true))\r\n        tryCatch(()=>api.sendPostRequest(success))\r\n            .then(r => {\r\n               dispatch(setMessageSuccess(r))\r\n               dispatch(changeLoadingSuccess(false))\r\n            })\r\n    }\r\n};\r\n\r\n","import React from 'react';\nimport style from \"./Wednesday.module.css\"\nimport {connect} from \"react-redux\";\nimport {setStyleAC} from \"./redux/settingReducer\";\n\nimport { responseMessage} from \"./redux/reducerTwist\";\n\n\n\nclass Wednesday extends React.Component {\n\n    state = {\n        success: false,\n        disable: false,\n    };\n\n    onChangeStyle = (color) => {\n        let styleColor;\n        switch (color) {\n            case 'green':\n                styleColor = style.green;\n                break;\n            case 'black':\n                styleColor = style.black;\n                break;\n            case 'brown':\n                styleColor = style.brown;\n                break;\n        }\n        this.props.setStyle(styleColor);\n    };\n\n    setValueSuccess = () => {\n        if (this.state.success) {\n            this.setState({success: false})\n        } else {\n            this.setState({success: true})\n        }\n    };\n\n    sendRequest = () => {\n        this.setState({disable: true});\n        this.props.responseMessage(this.state.success)\n\n    };\n\n\n    render = () => {\n        return (\n            <div className={style.Wednesday + \" \" + this.props.style}>\n                <div className={style.box}>\n                    <div>\n                      <p>SETTINGS :</p>\n                      <p><input type=\"radio\" name=\"color\" onClick={() => this.onChangeStyle('green')}/>Green</p>\n                      <p><input type=\"radio\" name=\"color\" onClick={() => this.onChangeStyle('black')}/>Black</p>\n                      <p><input type=\"radio\" name=\"color\" onClick={() => this.onChangeStyle('brown')}/>Brown</p>\n                  </div>\n                    <div>\n                         <p>SEND REQUEST</p>\n                        <div><input type=\"checkbox\" onClick={this.setValueSuccess}/></div>\n                        <button onClick={this.sendRequest} disabled={this.state.disable}>SEND</button>\n                        <div>answer : <h1>{this.props.message}</h1></div>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) =>  ( {style: state.settings.style}, {message: state.twist.message});\n\nexport default connect(mapStateToProps, {responseMessage, setStyle: setStyleAC})(Wednesday);\n","import React from \"react\";\r\nimport preloader from './loading.gif';\r\n\r\n\r\nlet Preloader =(props)=>{\r\n    return(\r\n        <div>\r\n            <img src={preloader} style={{\r\n                width: '260px',\r\n                height: '200px'\r\n            }}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\nimport s from \"./App.module.css\"\nimport Monday from \"./Monday/Monday\";\nimport Navbar from \"./Navbar/Navbar\";\nimport Tuesday from \"./Tuesday/Tuesday\";\nimport Route from \"react-router-dom/es/Route\";\nimport {HashRouter, Redirect, Switch} from \"react-router-dom\";\nimport Wednesday from \"./Wednesday\";\nimport {connect} from \"react-redux\";\nimport {changeLoadingSuccess} from \"./redux/reducerTwist\";\nimport Preloader from \"./assests/Preloader\";\n\nclass App extends React.Component {\n   state = {\n       isHidden: false,\n   };\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.props.changeLoading(false)\n        }, 3000)\n    }\n\n\n    render = () => {\n       return (\n            <HashRouter>\n                <div className={s.App+\" \" + this.props.style}>\n                    <div>  {!this.state.isHidden && <div>< Navbar/></div>}\n                        {!this.state.isHidden && <span onClick={() => this.setState({isHidden: true})}>Hide</span>}\n                        {this.state.isHidden && <span onClick={() => this.setState({isHidden: false})}>Show</span>}\n                    </div>\n                    {this.props.loading?<Preloader/>: <div>\n                        <Switch>\n                            <Route path=\"/monday\" render={() => <Monday/>}/>\n                            <Route path=\"/tuesday\" render={() => <Tuesday/>}/>\n                            <Route path=\"/wednesday\" render={() => <Wednesday/>}/>\n                            <Redirect exact path ={'/'} to={\"/monday\"} render = {()=><Monday/>}></Redirect>\n                        </Switch>\n                    </div>}\n\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    loading: state.twist.loading,\n    style: state.settings.style     });\n\nconst mapDispatchToProps = (dispatch)=>{\n    return { changeLoading: (loading)=>{\n          dispatch(changeLoadingSuccess(loading))\n        }}\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {reducerTwist} from \"./reducerTwist\";\r\nimport {settingReducer} from \"./settingReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    settings: settingReducer,\r\n    twist: reducerTwist\r\n});\r\n\r\nexport type AppStateType = ReturnType< typeof reducers>\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(<Provider store={store}> <App/></Provider> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}